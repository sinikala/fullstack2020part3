{"version":3,"sources":["components/Person.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Person","person","handleDeleteButton","name","number","onClick","id","style","marginLeft","baseUrl","axios","get","then","response","data","newObject","post","delete","console","log","put","Notification","message","className","Error","ShowNumbers","persons","map","key","App","useState","setPersons","filtered","setFiltered","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","notification","setNotification","error","setError","useEffect","personService","initialPersons","value","onChange","event","target","length","filteredPeople","filter","toUpperCase","includes","onSubmit","preventDefault","window","confirm","personToUpdate","find","p","updatedPerson","returnedPerson","catch","setTimeout","handleUpdate","phonebookObject","concat","addPerson","type","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da6a16ba.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Person = ({ person, handleDeleteButton }) => {\n    return (\n        <div>{person.name}  {person.number}\n            <button onClick={() => handleDeleteButton(person.id)} style={{ marginLeft: '14px' }}>delete</button>\n        </div>\n    )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n//'https://infinite-beach-82485.herokuapp.com/api/persons'\n//'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(console.log('deleted!'))\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, remove, update }","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react';\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filtered, setFiltered] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    const phonebookObject = {\n      name: newName,\n      number: newNumber,\n      id: persons[persons.length - 1].id + 1,\n    }\n\n    personService\n      .create(phonebookObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNotification(`${newName} was added`)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        setError(`${error.response.data.error}`)\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const deletePerson = (id) => {\n    personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        setNotification(`Succesfully deleted`)\n      })\n      .catch(error => {\n        setError(\n          `The person you are trying to delete was already deleted from server`\n        )\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleUpdate = (event) => {\n    const personToUpdate = persons.find(p => p.name === newName)\n    const updatedPerson = { ...personToUpdate, number: newNumber }\n    const id = personToUpdate.id\n\n    personService\n      .update(id, updatedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n        setNotification(`${updatedPerson.name} updated`)\n      })\n      .catch(error => {\n        setError(`${updatedPerson.name} has already been deleted from the server`)\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleDeleteButton = id => {\n    const name = persons.find(p => p.id === id).name\n    if (window.confirm(`Delete ${name}?`)) {\n      deletePerson(id)\n    }\n  }\n\n  const checkIfAlreadyExcists = (event) => {\n    event.preventDefault()\n\n    const match = persons.filter(person => (person.name.toUpperCase() === newName.toUpperCase()))\n\n    if (match.length > 0) {\n      const conf = window.confirm(`${newName} is already added to phonebook, replace the the old number with a new one?`)\n      if (conf) {\n        handleUpdate()\n      }\n      setNewName('')\n      setNewNumber('')\n    } else {\n      addPerson()\n    }\n\n  }\n\n\n  const handleFilterChange = (event) => {\n    if (event.target.value.length > 0) {\n      setShowAll(false)\n    } else {\n      setShowAll(true)\n    }\n    const filteredPeople = persons.filter(person =>\n      (person.name.toUpperCase().includes(event.target.value.toUpperCase())))\n    setFiltered(filteredPeople)\n    setNewFilter(event.target.value)\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error message={error} />\n      filter with name <input value={newFilter}\n        onChange={handleFilterChange} />\n      <h3>Add an new person</h3>\n      <form onSubmit={checkIfAlreadyExcists}>\n        <div>name: <input value={newName}\n          onChange={handleNameChange} /> </div>\n        <div>number: <input value={newNumber}\n          onChange={handleNumberChange} /> </div> <br />\n        <button type=\"submit\">add</button>\n      </form>\n      <ShowNumbers persons={showAll ? persons : filtered} handleDeleteButton={handleDeleteButton} />\n    </div>\n  )\n\n}\n\n\nconst ShowNumbers = ({ persons, handleDeleteButton }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons.map((person, id) =>\n        <Person key={id} person={person} handleDeleteButton={handleDeleteButton} />\n      )}\n    </div>\n  )\n}\n\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}